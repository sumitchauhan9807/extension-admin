{"ast":null,"code":"import axios from 'axios';\nimport { baseUrl } from './helpers';\naxios.defaults.baseURL = baseUrl;\naxios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nlet userData = localStorage.getItem('persist:root');\nif (userData) {\n  userData = JSON.parse(userData);\n  let user = JSON.parse(userData.user);\n  axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\n  console.log(user);\n}\naxios.interceptors.request.use(request => {\n  // console.log(request);\n  // Edit request config\n  return request;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  // console.log(response);\n  // Edit response config\n  return response;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\nconst setAxiosToken = token => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n};\nexport default axios;\nexport { setAxiosToken };","map":{"version":3,"names":["axios","baseUrl","defaults","baseURL","headers","common","post","userData","localStorage","getItem","JSON","parse","user","token","console","log","interceptors","request","use","error","Promise","reject","response","setAxiosToken"],"sources":["/home/sumit/my-projects/DIALOGMAKERS PROJECTS 2/EXTENSION/extension-admin/src/axios.js"],"sourcesContent":["import axios from 'axios';\nimport {baseUrl} from './helpers'\naxios.defaults.baseURL = baseUrl;\naxios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n\nlet userData = localStorage.getItem('persist:root')\nif(userData) {\n    userData = JSON.parse(userData)\n    let user = JSON.parse(userData.user)\n    axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`;\n    console.log(user)\n}\naxios.interceptors.request.use(request => {\n    // console.log(request);\n    // Edit request config\n    return request;\n}, error => {\n    console.log(error);\n    return Promise.reject(error);\n});\n\naxios.interceptors.response.use(response => {\n    // console.log(response);\n    // Edit response config\n    return response;\n}, error => {\n    console.log(error);\n    return Promise.reject(error);\n});\n\nconst setAxiosToken = (token) => {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n}\nexport default axios\nexport {\n  setAxiosToken\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,WAAW;AACjCD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAGF,OAAO;AAChCD,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,YAAY;AAC7DL,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACE,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAGhE,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AACnD,IAAGF,QAAQ,EAAE;EACTA,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;EAC/B,IAAIK,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACK,IAAI,CAAC;EACpCZ,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASO,IAAI,CAACC,KAAM,EAAC;EACvEC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;AACrB;AACAZ,KAAK,CAACgB,YAAY,CAACC,OAAO,CAACC,GAAG,CAACD,OAAO,IAAI;EACtC;EACA;EACA,OAAOA,OAAO;AAClB,CAAC,EAAEE,KAAK,IAAI;EACRL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEFnB,KAAK,CAACgB,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAACI,QAAQ,IAAI;EACxC;EACA;EACA,OAAOA,QAAQ;AACnB,CAAC,EAAEH,KAAK,IAAI;EACRL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EAClB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,MAAMI,aAAa,GAAIV,KAAK,IAAK;EAC/Bb,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASQ,KAAM,EAAC;AACpE,CAAC;AACD,eAAeb,KAAK;AACpB,SACEuB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}